[{"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/index.js":"1","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/App.js":"2","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/reportWebVitals.js":"3","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/ImagePopup.js":"4","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/PopupWithForm.js":"5","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/Header.js":"6","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/Footer.js":"7","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/Main.js":"8","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/utils/Api.js":"9","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/Card.js":"10","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/EditProfilePopup.js":"11","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/context/CurrentUserContext.js":"12","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/EditAvatarPopup.js":"13"},{"size":307,"mtime":1636983812535,"results":"14","hashOfConfig":"15"},{"size":4953,"mtime":1637694880006,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":550,"mtime":1630777753000,"results":"18","hashOfConfig":"15"},{"size":919,"mtime":1637688384686,"results":"19","hashOfConfig":"15"},{"size":260,"mtime":1636995906870,"results":"20","hashOfConfig":"15"},{"size":260,"mtime":1630700187000,"results":"21","hashOfConfig":"15"},{"size":1510,"mtime":1637690873262,"results":"22","hashOfConfig":"15"},{"size":3483,"mtime":1637685392592,"results":"23","hashOfConfig":"15"},{"size":2089,"mtime":1637686360162,"results":"24","hashOfConfig":"15"},{"size":2204,"mtime":1637694581099,"results":"25","hashOfConfig":"15"},{"size":85,"mtime":1637345925892,"results":"26","hashOfConfig":"15"},{"size":1003,"mtime":1637694840301,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1sse5cr",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/index.js",[],["59","60"],"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/App.js",["61","62"],"// import headerLogo from '../images/Vector.svg';\nimport '../index.css';\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/Api.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((module) => {\n        setCurrentUser(module);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((module) => {\n        setCards(module);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .editUserInfo(name, about)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        setIsEditProfilePopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .editUserAvatar(avatar)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        setIsEditAvatarPopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"description\">\n        <div className=\"page\">\n          <Header />\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n          <Footer />\n        </div>\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n        <PopupWithForm\n          name=\"new\"\n          title=\"Новое место\"\n          submitButton=\"Cохранить\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Название\"\n            className=\"popup__input\"\n            id=\"placeName\"\n            required\n            minLength=\"2\"\n            maxLength=\"30\"\n          />\n          <span id=\"placeName-error\" className=\"popup__error\"></span>\n          <input type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" className=\"popup__input\" id=\"link\" required />\n          <span id=\"link-error\" className=\"popup__error\"></span>\n        </PopupWithForm>\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <PopupWithForm name=\"delete\" title=\"Вы уверены?\" submitButton=\"Да\"></PopupWithForm>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/reportWebVitals.js",[],"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/ImagePopup.js",[],"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/PopupWithForm.js",[],"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/Header.js",[],"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/Footer.js",[],"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/Main.js",["63"],"import React from 'react';\r\nimport api from '../utils/Api.js';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick, cards, onCardLike }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"profile\">\r\n        <div className=\"profile__container\" onClick={onEditAvatar}>\r\n          <img className=\"profile__avatar\" src={`${currentUser.avatar}`} alt=\"avatar\" />\r\n          <button\r\n            type=\"button\"\r\n            className=\"profile__change\"\r\n            id=\"show-popup-avatar\"\r\n            aria-label=\"Изменить аватар\"\r\n          ></button>\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n          <button type=\"button\" className=\"profile__select-button\" id=\"show-popup\" onClick={onEditProfile}></button>\r\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n        </div>\r\n        <button type=\"button\" className=\"profile__button\" id=\"show-popup-new\" onClick={onAddPlace}></button>\r\n      </div>\r\n\r\n      <div className=\"elements\">\r\n        <ul className=\"elements__list\">\r\n          {cards.map((card) => (\r\n            <Card key={card._id} card={card} onCardClick={onCardClick} onCardLike={onCardLike} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/utils/Api.js",[],"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/Card.js",["64"],"import React from 'react';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\nimport api from '../utils/Api.js';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = `element__button_delete ${\r\n    isOwn ? 'element__button_delete' : 'element__button_delete-hidden'\r\n  }`;\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = `element__button ${isLiked ? 'element__button_theme-dark' : 'element__button'}`;\r\n\r\n  // вместо пропса используем конткретные слова\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"element\">\r\n      <img className=\"element__image\" src={card.link} alt={card.name} onClick={handleClick} />\r\n      <div className=\"element__caption\">\r\n        <h2 className=\"element__title\">{card.name}</h2>\r\n        <div className=\"element__actions\">\r\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick} id=\"like\"></button>\r\n          <p className=\"element__button_count\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n      <button type=\"button\" onClick={handleDeleteClick} className={cardDeleteButtonClassName}></button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/EditProfilePopup.js",[],"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/context/CurrentUserContext.js",[],"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/EditAvatarPopup.js",["65"],"import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../context/CurrentUserContext';\n\nfunction EditAvatarPopup({ isOpen, isClose, onUpdateAvatar }) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const avatarRef = React.useRef();\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"update\"\n      title=\"Обновить аватар\"\n      submitButton=\"Cохранить\"\n      isOpen={isOpen}\n      onClose={isClose}\n      handleSubmit={handleSubmit}\n    >\n      <input\n        className=\"popup__input\"\n        id=\"newAvatar\"\n        name=\"link-avatar\"\n        type=\"url\"\n        defaultValue=\"\"\n        placeholder=\"Ссылка на новый аватар\"\n        required\n      />\n      <span className=\"popup__error\" id=\"newAvatar-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":16,"column":10,"nodeType":"72","messageId":"73","endLine":16,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":16,"column":27,"nodeType":"72","messageId":"73","endLine":16,"endColumn":45},{"ruleId":"70","severity":1,"message":"75","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":11},{"ruleId":"70","severity":1,"message":"75","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":11},{"ruleId":"70","severity":1,"message":"76","line":6,"column":9,"nodeType":"72","messageId":"73","endLine":6,"endColumn":20},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'isEditPopupOpen' is assigned a value but never used.","Identifier","unusedVar","'setIsEditPopupOpen' is assigned a value but never used.","'api' is defined but never used.","'currentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]